//------------------------------------------------------------------------------
// <auto-generated>
//    Этот код был создан из шаблона.
//
//    Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//    Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace RVLMap.Web
{
    #region Контексты
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    public partial class base_vetlabEntities : ObjectContext
    {
        #region Конструкторы
    
        /// <summary>
        /// Инициализирует новый объект base_vetlabEntities, используя строку соединения из раздела "base_vetlabEntities" файла конфигурации приложения.
        /// </summary>
        public base_vetlabEntities() : base("name=base_vetlabEntities", "base_vetlabEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта base_vetlabEntities.
        /// </summary>
        public base_vetlabEntities(string connectionString) : base(connectionString, "base_vetlabEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта base_vetlabEntities.
        /// </summary>
        public base_vetlabEntities(EntityConnection connection) : base(connection, "base_vetlabEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Разделяемые методы
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Свойства ObjectSet
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<C_AccumRg871> C_AccumRg871
        {
            get
            {
                if ((_C_AccumRg871 == null))
                {
                    _C_AccumRg871 = base.CreateObjectSet<C_AccumRg871>("C_AccumRg871");
                }
                return _C_AccumRg871;
            }
        }
        private ObjectSet<C_AccumRg871> _C_AccumRg871;

        #endregion

        #region Методы AddTo
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet C_AccumRg871. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToC_AccumRg871(C_AccumRg871 c_AccumRg871)
        {
            base.AddObject("C_AccumRg871", c_AccumRg871);
        }

        #endregion

    }

    #endregion

    #region Сущности
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="base_vetlabModel", Name="C_AccumRg871")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class C_AccumRg871 : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта C_AccumRg871.
        /// </summary>
        /// <param name="c_Period">Исходное значение свойства C_Period.</param>
        /// <param name="c_RecorderTRef">Исходное значение свойства C_RecorderTRef.</param>
        /// <param name="c_RecorderRRef">Исходное значение свойства C_RecorderRRef.</param>
        /// <param name="c_LineNo">Исходное значение свойства C_LineNo.</param>
        /// <param name="c_Active">Исходное значение свойства C_Active.</param>
        /// <param name="c_RecordKind">Исходное значение свойства C_RecordKind.</param>
        /// <param name="c_Fld872RRef">Исходное значение свойства C_Fld872RRef.</param>
        /// <param name="c_Fld873RRef">Исходное значение свойства C_Fld873RRef.</param>
        /// <param name="c_Fld874RRef">Исходное значение свойства C_Fld874RRef.</param>
        /// <param name="c_Fld875RRef">Исходное значение свойства C_Fld875RRef.</param>
        /// <param name="c_Fld876">Исходное значение свойства C_Fld876.</param>
        public static C_AccumRg871 CreateC_AccumRg871(global::System.DateTime c_Period, global::System.Byte[] c_RecorderTRef, global::System.Byte[] c_RecorderRRef, global::System.Decimal c_LineNo, global::System.Byte[] c_Active, global::System.Decimal c_RecordKind, global::System.Byte[] c_Fld872RRef, global::System.Byte[] c_Fld873RRef, global::System.Byte[] c_Fld874RRef, global::System.Byte[] c_Fld875RRef, global::System.Decimal c_Fld876)
        {
            C_AccumRg871 c_AccumRg871 = new C_AccumRg871();
            c_AccumRg871.C_Period = c_Period;
            c_AccumRg871.C_RecorderTRef = c_RecorderTRef;
            c_AccumRg871.C_RecorderRRef = c_RecorderRRef;
            c_AccumRg871.C_LineNo = c_LineNo;
            c_AccumRg871.C_Active = c_Active;
            c_AccumRg871.C_RecordKind = c_RecordKind;
            c_AccumRg871.C_Fld872RRef = c_Fld872RRef;
            c_AccumRg871.C_Fld873RRef = c_Fld873RRef;
            c_AccumRg871.C_Fld874RRef = c_Fld874RRef;
            c_AccumRg871.C_Fld875RRef = c_Fld875RRef;
            c_AccumRg871.C_Fld876 = c_Fld876;
            return c_AccumRg871;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime C_Period
        {
            get
            {
                return _C_Period;
            }
            set
            {
                if (_C_Period != value)
                {
                    OnC_PeriodChanging(value);
                    ReportPropertyChanging("C_Period");
                    _C_Period = StructuralObject.SetValidValue(value, "C_Period");
                    ReportPropertyChanged("C_Period");
                    OnC_PeriodChanged();
                }
            }
        }
        private global::System.DateTime _C_Period;
        partial void OnC_PeriodChanging(global::System.DateTime value);
        partial void OnC_PeriodChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] C_RecorderTRef
        {
            get
            {
                return StructuralObject.GetValidValue(_C_RecorderTRef);
            }
            set
            {
                if (!StructuralObject.BinaryEquals(_C_RecorderTRef, value))
                {
                    OnC_RecorderTRefChanging(value);
                    ReportPropertyChanging("C_RecorderTRef");
                    _C_RecorderTRef = StructuralObject.SetValidValue(value, false, "C_RecorderTRef");
                    ReportPropertyChanged("C_RecorderTRef");
                    OnC_RecorderTRefChanged();
                }
            }
        }
        private global::System.Byte[] _C_RecorderTRef;
        partial void OnC_RecorderTRefChanging(global::System.Byte[] value);
        partial void OnC_RecorderTRefChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] C_RecorderRRef
        {
            get
            {
                return StructuralObject.GetValidValue(_C_RecorderRRef);
            }
            set
            {
                if (!StructuralObject.BinaryEquals(_C_RecorderRRef, value))
                {
                    OnC_RecorderRRefChanging(value);
                    ReportPropertyChanging("C_RecorderRRef");
                    _C_RecorderRRef = StructuralObject.SetValidValue(value, false, "C_RecorderRRef");
                    ReportPropertyChanged("C_RecorderRRef");
                    OnC_RecorderRRefChanged();
                }
            }
        }
        private global::System.Byte[] _C_RecorderRRef;
        partial void OnC_RecorderRRefChanging(global::System.Byte[] value);
        partial void OnC_RecorderRRefChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal C_LineNo
        {
            get
            {
                return _C_LineNo;
            }
            set
            {
                if (_C_LineNo != value)
                {
                    OnC_LineNoChanging(value);
                    ReportPropertyChanging("C_LineNo");
                    _C_LineNo = StructuralObject.SetValidValue(value, "C_LineNo");
                    ReportPropertyChanged("C_LineNo");
                    OnC_LineNoChanged();
                }
            }
        }
        private global::System.Decimal _C_LineNo;
        partial void OnC_LineNoChanging(global::System.Decimal value);
        partial void OnC_LineNoChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] C_Active
        {
            get
            {
                return StructuralObject.GetValidValue(_C_Active);
            }
            set
            {
                if (!StructuralObject.BinaryEquals(_C_Active, value))
                {
                    OnC_ActiveChanging(value);
                    ReportPropertyChanging("C_Active");
                    _C_Active = StructuralObject.SetValidValue(value, false, "C_Active");
                    ReportPropertyChanged("C_Active");
                    OnC_ActiveChanged();
                }
            }
        }
        private global::System.Byte[] _C_Active;
        partial void OnC_ActiveChanging(global::System.Byte[] value);
        partial void OnC_ActiveChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal C_RecordKind
        {
            get
            {
                return _C_RecordKind;
            }
            set
            {
                if (_C_RecordKind != value)
                {
                    OnC_RecordKindChanging(value);
                    ReportPropertyChanging("C_RecordKind");
                    _C_RecordKind = StructuralObject.SetValidValue(value, "C_RecordKind");
                    ReportPropertyChanged("C_RecordKind");
                    OnC_RecordKindChanged();
                }
            }
        }
        private global::System.Decimal _C_RecordKind;
        partial void OnC_RecordKindChanging(global::System.Decimal value);
        partial void OnC_RecordKindChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] C_Fld872RRef
        {
            get
            {
                return StructuralObject.GetValidValue(_C_Fld872RRef);
            }
            set
            {
                if (!StructuralObject.BinaryEquals(_C_Fld872RRef, value))
                {
                    OnC_Fld872RRefChanging(value);
                    ReportPropertyChanging("C_Fld872RRef");
                    _C_Fld872RRef = StructuralObject.SetValidValue(value, false, "C_Fld872RRef");
                    ReportPropertyChanged("C_Fld872RRef");
                    OnC_Fld872RRefChanged();
                }
            }
        }
        private global::System.Byte[] _C_Fld872RRef;
        partial void OnC_Fld872RRefChanging(global::System.Byte[] value);
        partial void OnC_Fld872RRefChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] C_Fld873RRef
        {
            get
            {
                return StructuralObject.GetValidValue(_C_Fld873RRef);
            }
            set
            {
                if (!StructuralObject.BinaryEquals(_C_Fld873RRef, value))
                {
                    OnC_Fld873RRefChanging(value);
                    ReportPropertyChanging("C_Fld873RRef");
                    _C_Fld873RRef = StructuralObject.SetValidValue(value, false, "C_Fld873RRef");
                    ReportPropertyChanged("C_Fld873RRef");
                    OnC_Fld873RRefChanged();
                }
            }
        }
        private global::System.Byte[] _C_Fld873RRef;
        partial void OnC_Fld873RRefChanging(global::System.Byte[] value);
        partial void OnC_Fld873RRefChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] C_Fld874RRef
        {
            get
            {
                return StructuralObject.GetValidValue(_C_Fld874RRef);
            }
            set
            {
                if (!StructuralObject.BinaryEquals(_C_Fld874RRef, value))
                {
                    OnC_Fld874RRefChanging(value);
                    ReportPropertyChanging("C_Fld874RRef");
                    _C_Fld874RRef = StructuralObject.SetValidValue(value, false, "C_Fld874RRef");
                    ReportPropertyChanged("C_Fld874RRef");
                    OnC_Fld874RRefChanged();
                }
            }
        }
        private global::System.Byte[] _C_Fld874RRef;
        partial void OnC_Fld874RRefChanging(global::System.Byte[] value);
        partial void OnC_Fld874RRefChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] C_Fld875RRef
        {
            get
            {
                return StructuralObject.GetValidValue(_C_Fld875RRef);
            }
            set
            {
                if (!StructuralObject.BinaryEquals(_C_Fld875RRef, value))
                {
                    OnC_Fld875RRefChanging(value);
                    ReportPropertyChanging("C_Fld875RRef");
                    _C_Fld875RRef = StructuralObject.SetValidValue(value, false, "C_Fld875RRef");
                    ReportPropertyChanged("C_Fld875RRef");
                    OnC_Fld875RRefChanged();
                }
            }
        }
        private global::System.Byte[] _C_Fld875RRef;
        partial void OnC_Fld875RRefChanging(global::System.Byte[] value);
        partial void OnC_Fld875RRefChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal C_Fld876
        {
            get
            {
                return _C_Fld876;
            }
            set
            {
                if (_C_Fld876 != value)
                {
                    OnC_Fld876Changing(value);
                    ReportPropertyChanging("C_Fld876");
                    _C_Fld876 = StructuralObject.SetValidValue(value, "C_Fld876");
                    ReportPropertyChanged("C_Fld876");
                    OnC_Fld876Changed();
                }
            }
        }
        private global::System.Decimal _C_Fld876;
        partial void OnC_Fld876Changing(global::System.Decimal value);
        partial void OnC_Fld876Changed();

        #endregion

    }

    #endregion

}
